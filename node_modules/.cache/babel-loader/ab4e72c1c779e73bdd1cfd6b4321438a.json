{"remainingRequest":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/babel-loader/lib/index.js!/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MeterViotas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MeterViotas.vue","mtime":1618941194715},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7fTsgLy8gc2V0IHRoZSBkaW1lbnNpb25zIGFuZCBtYXJnaW5zIG9mIHRoZSBncmFwaAoKdmFyIG1hcmdpbiA9IHsKICB0b3A6IDMwLAogIHJpZ2h0OiAwLAogIGJvdHRvbTogMzAsCiAgbGVmdDogNTAKfSwKICAgIHdpZHRoID0gMjEwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQsCiAgICBoZWlnaHQgPSAyMTAgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbTsgLy9SZWFkIHRoZSBkYXRhCgpkMy5jc3YoImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ob2x0enkvZGF0YV90b192aXovbWFzdGVyL0V4YW1wbGVfZGF0YXNldC81X09uZUNhdFNldk51bU9yZGVyZWQuY3N2IiwgZnVuY3Rpb24gKGRhdGEpIHsKICAvLyBncm91cCB0aGUgZGF0YTogSSB3YW50IHRvIGRyYXcgb25lIGxpbmUgcGVyIGdyb3VwCiAgdmFyIHN1bXN0YXQgPSBkMy5uZXN0KCkgLy8gbmVzdCBmdW5jdGlvbiBhbGxvd3MgdG8gZ3JvdXAgdGhlIGNhbGN1bGF0aW9uIHBlciBsZXZlbCBvZiBhIGZhY3RvcgogIC5rZXkoZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBkLm5hbWU7CiAgfSkuZW50cmllcyhkYXRhKTsgLy8gV2hhdCBpcyB0aGUgbGlzdCBvZiBncm91cHM/CgogIHZhciBhbGxLZXlzID0gc3Vtc3RhdC5tYXAoZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBkLmtleTsKICB9KTsgLy8gQWRkIGFuIHN2ZyBlbGVtZW50IGZvciBlYWNoIGdyb3VwLiBUaGUgd2lsbCBiZSBvbmUgYmVzaWRlIGVhY2ggb3RoZXIgYW5kIHdpbGwgZ28gb24gdGhlIG5leHQgcm93IHdoZW4gbm8gbW9yZSByb29tIGF2YWlsYWJsZQoKICB2YXIgc3ZnID0gZDMuc2VsZWN0KCJkaXYiKS5zZWxlY3RBbGwoInVuaXF1ZUNoYXJ0IikuZGF0YShzdW1zdGF0KS5lbnRlcigpLmFwcGVuZCgic3ZnIikuYXR0cigid2lkdGgiLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSkuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2luLmxlZnQgKyAiLCIgKyBtYXJnaW4udG9wICsgIikiKTsgLy8gQWRkIFggYXhpcyAtLT4gaXQgaXMgYSBkYXRlIGZvcm1hdAoKICB2YXIgeCA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKGQzLmV4dGVudChkYXRhLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQueWVhcjsKICB9KSkucmFuZ2UoWzAsIHdpZHRoXSk7CiAgc3ZnLmFwcGVuZCgiZyIpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwiICsgaGVpZ2h0ICsgIikiKS5jYWxsKGQzLmF4aXNCb3R0b20oeCkudGlja3MoMykpOyAvL0FkZCBZIGF4aXMKCiAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgZDMubWF4KGRhdGEsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gK2QubjsKICB9KV0pLnJhbmdlKFtoZWlnaHQsIDBdKTsKICBzdmcuYXBwZW5kKCJnIikuY2FsbChkMy5heGlzTGVmdCh5KS50aWNrcyg1KSk7IC8vIGNvbG9yIHBhbGV0dGUKCiAgdmFyIGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKCkuZG9tYWluKGFsbEtleXMpLnJhbmdlKFsnI2U0MWExYycsICcjMzc3ZWI4JywgJyM0ZGFmNGEnLCAnIzk4NGVhMycsICcjZmY3ZjAwJywgJyNmZmZmMzMnLCAnI2E2NTYyOCcsICcjZjc4MWJmJywgJyM5OTk5OTknXSk7IC8vIERyYXcgdGhlIGxpbmUKCiAgc3ZnLmFwcGVuZCgicGF0aCIpLmF0dHIoImZpbGwiLCAibm9uZSIpLmF0dHIoInN0cm9rZSIsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gY29sb3IoZC5rZXkpOwogIH0pLmF0dHIoInN0cm9rZS13aWR0aCIsIDEuOSkuYXR0cigiZCIsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gZDMubGluZSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgcmV0dXJuIHgoZC55ZWFyKTsKICAgIH0pLnkoZnVuY3Rpb24gKGQpIHsKICAgICAgcmV0dXJuIHkoK2Qubik7CiAgICB9KShkLnZhbHVlcyk7CiAgfSk7IC8vIEFkZCB0aXRsZXMKCiAgc3ZnLmFwcGVuZCgidGV4dCIpLmF0dHIoInRleHQtYW5jaG9yIiwgInN0YXJ0IikuYXR0cigieSIsIC01KS5hdHRyKCJ4IiwgMCkudGV4dChmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQua2V5OwogIH0pLnN0eWxlKCJmaWxsIiwgZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBjb2xvcihkLmtleSk7CiAgfSk7Cn0pOw=="},{"version":3,"sources":["MeterViotas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n    </div>\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\nexport default {\n\n}\n\n// set the dimensions and margins of the graph\nvar margin = {top: 30, right: 0, bottom: 30, left: 50},\n    width = 210 - margin.left - margin.right,\n    height = 210 - margin.top - margin.bottom;\n\n//Read the data\nd3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered.csv\", function(data) {\n\n  // group the data: I want to draw one line per group\n  var sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n    .key(function(d) { return d.name;})\n    .entries(data);\n\n  // What is the list of groups?\n  var allKeys = sumstat.map(function(d){return d.key})\n\n  // Add an svg element for each group. The will be one beside each other and will go on the next row when no more room available\n  var svg = d3.select(\"div\")\n    .selectAll(\"uniqueChart\")\n    .data(sumstat)\n    .enter()\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Add X axis --> it is a date format\n  var x = d3.scaleLinear()\n    .domain(d3.extent(data, function(d) { return d.year; }))\n    .range([ 0, width ]);\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(3));\n\n  //Add Y axis\n  var y = d3.scaleLinear()\n    .domain([0, d3.max(data, function(d) { return +d.n; })])\n    .range([ height, 0 ]);\n  svg.append(\"g\")\n    .call(d3.axisLeft(y).ticks(5));\n\n  // color palette\n  var color = d3.scaleOrdinal()\n    .domain(allKeys)\n    .range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])\n\n  // Draw the line\n  svg\n    .append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", function(d){ return color(d.key) })\n      .attr(\"stroke-width\", 1.9)\n      .attr(\"d\", function(d){\n        return d3.line()\n          .x(function(d) { return x(d.year); })\n          .y(function(d) { return y(+d.n); })\n          (d.values)\n      })\n\n  // Add titles\n  svg\n    .append(\"text\")\n    .attr(\"text-anchor\", \"start\")\n    .attr(\"y\", -5)\n    .attr(\"x\", 0)\n    .text(function(d){ return(d.key)})\n    .style(\"fill\", function(d){ return color(d.key) })\n\n})\n</script>\n"],"sourceRoot":"src/components"}]}