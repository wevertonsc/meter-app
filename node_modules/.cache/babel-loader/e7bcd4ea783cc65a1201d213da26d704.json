{"remainingRequest":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/babel-loader/lib/index.js!/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MultiplesGraphs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MultiplesGraphs.vue","mtime":1619048138731},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmV4cG9ydCBkZWZhdWx0IHt9Owp2YXIgbWFyZ2luID0gewogIHRvcDogOCwKICByaWdodDogMTAsCiAgYm90dG9tOiAyLAogIGxlZnQ6IDEwCn0sCiAgICB3aWR0aCA9IDYwMCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0LAogICAgaGVpZ2h0ID0gMzAwIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207CnZhciBwYXJzZURhdGUgPSBkMy50aW1lLmZvcm1hdCgiJWIgJVkiKS5wYXJzZTsKdmFyIHggPSBkMy50aW1lLnNjYWxlKCkucmFuZ2UoWzAsIHdpZHRoXSk7CnZhciB5ID0gZDMuc2NhbGUubGluZWFyKCkucmFuZ2UoW2hlaWdodCwgMF0pOwp2YXIgYXJlYSA9IGQzLnN2Zy5hcmVhKCkueChmdW5jdGlvbiAoZCkgewogIHJldHVybiB4KGQuZGF0ZSk7Cn0pLnkwKGhlaWdodCkueTEoZnVuY3Rpb24gKGQpIHsKICByZXR1cm4geShkLm1lYXN1cmUpOwp9KTsKdmFyIGxpbmUgPSBkMy5zdmcubGluZSgpLngoZnVuY3Rpb24gKGQpIHsKICByZXR1cm4geChkLmRhdGUpOwp9KS55KGZ1bmN0aW9uIChkKSB7CiAgcmV0dXJuIHkoZC5tZWFzdXJlKTsKfSk7CmQzLnRzdigiaHR0cDovL2xvY2FsaG9zdDo4MDg1L2FwaS92MS9tZXRlci9tZWFzdXJlcyIsIHR5cGUsIGZ1bmN0aW9uIChlcnJvciwgZGF0YSkgewogIC8vZDMudHN2KCJzdG9ja3MudHN2IiwgdHlwZSwgZnVuY3Rpb24oZXJyb3IsIGRhdGEpIHsKICB2YXIgbWV0ZXJzID0gZDMubmVzdCgpLmtleShmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQubWV0ZXI7CiAgfSkuZW50cmllcyhkYXRhKTsKICB4LmRvbWFpbihbZDMubWluKG1ldGVycywgZnVuY3Rpb24gKG1ldGVyKSB7CiAgICByZXR1cm4gbWV0ZXIudmFsdWVzWzBdLmRhdGU7CiAgfSksIGQzLm1heChtZXRlcnMsIGZ1bmN0aW9uIChtZXRlcikgewogICAgcmV0dXJuIG1ldGVyLnZhbHVlc1ttZXRlci52YWx1ZXMubGVuZ3RoIC0gMV0uZGF0ZTsKICB9KV0pOwogIHZhciBzdmcgPSBkMy5zZWxlY3QoImRpdiIpLnNlbGVjdEFsbCgic3ZnIikuZGF0YShtZXRlcnMpLmVudGVyKCkuYXBwZW5kKCJzdmciKS5hdHRyKCJ3aWR0aCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpLmF0dHIoImhlaWdodCIsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKS5hcHBlbmQoImciKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyBtYXJnaW4ubGVmdCArICIsIiArIG1hcmdpbi50b3AgKyAiKSIpLmVhY2gobXVsdGlwbGUpOwogIHN2Zy5hcHBlbmQoInRleHQiKS5hdHRyKCJ4Iiwgd2lkdGggLSA2KS5hdHRyKCJ5IiwgaGVpZ2h0IC0gNikuc3R5bGUoInRleHQtYW5jaG9yIiwgImVuZCIpLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBkLmtleTsKICB9KTsKfSk7CgpmdW5jdGlvbiBtdWx0aXBsZShtZXRlcikgewogIHZhciBzdmcgPSBkMy5zZWxlY3QodGhpcyk7CiAgeS5kb21haW4oWzAsIGQzLm1heChtZXRlci52YWx1ZXMsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gZC5tZWFzdXJlOwogIH0pXSk7CiAgc3ZnLmFwcGVuZCgicGF0aCIpLmF0dHIoImNsYXNzIiwgImFyZWEiKS5hdHRyKCJkIiwgYXJlYShtZXRlci52YWx1ZXMpKS5zdHlsZSgiZmlsbCIsICIjZTdlN2U3Iik7CiAgc3ZnLmFwcGVuZCgicGF0aCIpLmF0dHIoImNsYXNzIiwgImxpbmUiKS5hdHRyKCJkIiwgbGluZShtZXRlci52YWx1ZXMpKTsKfQoKZnVuY3Rpb24gdHlwZShkKSB7CiAgZC5tZWFzdXJlID0gK2QubWVhc3VyZTsKICBkLmRhdGUgPSBwYXJzZURhdGUoZC5kYXRlKTsKICByZXR1cm4gZDsKfQ=="},{"version":3,"sources":["MultiplesGraphs.vue"],"names":[],"mappings":";;;;;;;AAMA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,eAAA,EAAA;AAIA,IAAA,MAAA,GAAA;AAAA,EAAA,GAAA,EAAA,CAAA;AAAA,EAAA,KAAA,EAAA,EAAA;AAAA,EAAA,MAAA,EAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA;AAAA,IACA,KAAA,GAAA,MAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KADA;AAAA,IAEA,MAAA,GAAA,MAAA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,MAFA;AAIA,IAAA,SAAA,GAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA;AAEA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,KAAA,GACA,KADA,CACA,CAAA,CAAA,EAAA,KAAA,CADA,CAAA;AAGA,IAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA,MAAA,GACA,KADA,CACA,CAAA,MAAA,EAAA,CAAA,CADA,CAAA;AAGA,IAAA,IAAA,GAAA,EAAA,CAAA,GAAA,CAAA,IAAA,GACA,CADA,CACA,UAAA,CAAA,EAAA;AAAA,SAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,CADA,EAEA,EAFA,CAEA,MAFA,EAGA,EAHA,CAGA,UAAA,CAAA,EAAA;AAAA,SAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA;AAAA,CAHA,CAAA;AAKA,IAAA,IAAA,GAAA,EAAA,CAAA,GAAA,CAAA,IAAA,GACA,CADA,CACA,UAAA,CAAA,EAAA;AAAA,SAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,CADA,EAEA,CAFA,CAEA,UAAA,CAAA,EAAA;AAAA,SAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA;AAAA,CAFA,CAAA;AAIA,EAAA,CAAA,GAAA,CAAA,6CAAA,EAAA,IAAA,EAAA,UAAA,KAAA,EAAA,IAAA,EAAA;AACA;AACA,MAAA,MAAA,GAAA,EAAA,CAAA,IAAA,GACA,GADA,CACA,UAAA,CAAA,EAAA;AAAA,WAAA,CAAA,CAAA,KAAA;AAAA,GADA,EAEA,OAFA,CAEA,IAFA,CAAA;AAIA,EAAA,CAAA,CAAA,MAAA,CAAA,CACA,EAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,KAAA,EAAA;AAAA,WAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA;AAAA,GAAA,CADA,EAEA,EAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,KAAA,EAAA;AAAA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA;AAAA,GAAA,CAFA,CAAA;AAKA,MAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,SAAA,CAAA,KAAA,EACA,IADA,CACA,MADA,EAEA,KAFA,GAEA,MAFA,CAEA,KAFA,EAGA,IAHA,CAGA,OAHA,EAGA,KAAA,GAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAHA,EAIA,IAJA,CAIA,QAJA,EAIA,MAAA,GAAA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,MAJA,EAKA,MALA,CAKA,GALA,EAMA,IANA,CAMA,WANA,EAMA,eAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,GAAA,GAAA,GANA,EAOA,IAPA,CAOA,QAPA,CAAA;AASA,EAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,GADA,EACA,KAAA,GAAA,CADA,EAEA,IAFA,CAEA,GAFA,EAEA,MAAA,GAAA,CAFA,EAGA,KAHA,CAGA,aAHA,EAGA,KAHA,EAIA,IAJA,CAIA,UAAA,CAAA,EAAA;AAAA,WAAA,CAAA,CAAA,GAAA;AAAA,GAJA;AAMA,CA1BA;;AA4BA,SAAA,QAAA,CAAA,KAAA,EAAA;AACA,MAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAEA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AAAA,WAAA,CAAA,CAAA,OAAA;AAAA,GAAA,CAAA,CAAA;AAEA,EAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,OADA,EACA,MADA,EAEA,IAFA,CAEA,GAFA,EAEA,IAAA,CAAA,KAAA,CAAA,MAAA,CAFA,EAGA,KAHA,CAGA,MAHA,EAGA,SAHA;AAKA,EAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,OADA,EACA,MADA,EAEA,IAFA,CAEA,GAFA,EAEA,IAAA,CAAA,KAAA,CAAA,MAAA,CAFA;AAGA;;AAEA,SAAA,IAAA,CAAA,CAAA,EAAA;AACA,EAAA,CAAA,CAAA,OAAA,GAAA,CAAA,CAAA,CAAA,OAAA;AACA,EAAA,CAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,SAAA,CAAA;AACA","sourcesContent":["<template>\n    <div id=\"graph\" >\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n\n}\n\nvar margin = {top: 8, right: 10, bottom: 2, left: 10},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%b %Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar area = d3.svg.area()\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.measure); });\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.measure); });\n\nd3.tsv(\"http://localhost:8085/api/v1/meter/measures\", type, function(error, data) {\n//d3.tsv(\"stocks.tsv\", type, function(error, data) {\n  var meters = d3.nest()\n      .key(function(d) { return d.meter; })\n      .entries(data);\n\n  x.domain([\n    d3.min(meters, function(meter) { return meter.values[0].date; }),\n    d3.max(meters, function(meter) { return meter.values[meter.values.length - 1].date; })\n  ]);\n\n  var svg = d3.select(\"div\").selectAll(\"svg\")\n      .data(meters)\n    .enter().append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .each(multiple)\n\n  svg.append(\"text\")\n      .attr(\"x\", width - 6)\n      .attr(\"y\", height - 6)\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d.key; });\n\n});\n\nfunction multiple(meter) {\n  var svg = d3.select(this);\n\n  y.domain([0, d3.max(meter.values, function(d) { return d.measure; })]);\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area(meter.values))\n       .style(\"fill\", \"#e7e7e7\");\n\n  svg.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line(meter.values));\n}\n\nfunction type(d) {\n  d.measure = +d.measure;\n  d.date = parseDate(d.date);\n  return d;\n}\n\n</script>\n\n<style>\n#graph {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  background-image:'3.jpg';\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}