{"remainingRequest":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MeterViotas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/src/components/MeterViotas.vue","mtime":1618941194715},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weverton.castanho/architecture/viotas/meter-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCgppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmV4cG9ydCBkZWZhdWx0IHsKCn0KCi8vIHNldCB0aGUgZGltZW5zaW9ucyBhbmQgbWFyZ2lucyBvZiB0aGUgZ3JhcGgKdmFyIG1hcmdpbiA9IHt0b3A6IDMwLCByaWdodDogMCwgYm90dG9tOiAzMCwgbGVmdDogNTB9LAogICAgd2lkdGggPSAyMTAgLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodCwKICAgIGhlaWdodCA9IDIxMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOwoKLy9SZWFkIHRoZSBkYXRhCmQzLmNzdigiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2hvbHR6eS9kYXRhX3RvX3Zpei9tYXN0ZXIvRXhhbXBsZV9kYXRhc2V0LzVfT25lQ2F0U2V2TnVtT3JkZXJlZC5jc3YiLCBmdW5jdGlvbihkYXRhKSB7CgogIC8vIGdyb3VwIHRoZSBkYXRhOiBJIHdhbnQgdG8gZHJhdyBvbmUgbGluZSBwZXIgZ3JvdXAKICB2YXIgc3Vtc3RhdCA9IGQzLm5lc3QoKSAvLyBuZXN0IGZ1bmN0aW9uIGFsbG93cyB0byBncm91cCB0aGUgY2FsY3VsYXRpb24gcGVyIGxldmVsIG9mIGEgZmFjdG9yCiAgICAua2V5KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQubmFtZTt9KQogICAgLmVudHJpZXMoZGF0YSk7CgogIC8vIFdoYXQgaXMgdGhlIGxpc3Qgb2YgZ3JvdXBzPwogIHZhciBhbGxLZXlzID0gc3Vtc3RhdC5tYXAoZnVuY3Rpb24oZCl7cmV0dXJuIGQua2V5fSkKCiAgLy8gQWRkIGFuIHN2ZyBlbGVtZW50IGZvciBlYWNoIGdyb3VwLiBUaGUgd2lsbCBiZSBvbmUgYmVzaWRlIGVhY2ggb3RoZXIgYW5kIHdpbGwgZ28gb24gdGhlIG5leHQgcm93IHdoZW4gbm8gbW9yZSByb29tIGF2YWlsYWJsZQogIHZhciBzdmcgPSBkMy5zZWxlY3QoImRpdiIpCiAgICAuc2VsZWN0QWxsKCJ1bmlxdWVDaGFydCIpCiAgICAuZGF0YShzdW1zdGF0KQogICAgLmVudGVyKCkKICAgIC5hcHBlbmQoInN2ZyIpCiAgICAgIC5hdHRyKCJ3aWR0aCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpCiAgICAgIC5hdHRyKCJoZWlnaHQiLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSkKICAgIC5hcHBlbmQoImciKQogICAgICAuYXR0cigidHJhbnNmb3JtIiwKICAgICAgICAgICAgInRyYW5zbGF0ZSgiICsgbWFyZ2luLmxlZnQgKyAiLCIgKyBtYXJnaW4udG9wICsgIikiKTsKCiAgLy8gQWRkIFggYXhpcyAtLT4gaXQgaXMgYSBkYXRlIGZvcm1hdAogIHZhciB4ID0gZDMuc2NhbGVMaW5lYXIoKQogICAgLmRvbWFpbihkMy5leHRlbnQoZGF0YSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55ZWFyOyB9KSkKICAgIC5yYW5nZShbIDAsIHdpZHRoIF0pOwogIHN2ZwogICAgLmFwcGVuZCgiZyIpCiAgICAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgwLCIgKyBoZWlnaHQgKyAiKSIpCiAgICAuY2FsbChkMy5heGlzQm90dG9tKHgpLnRpY2tzKDMpKTsKCiAgLy9BZGQgWSBheGlzCiAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpCiAgICAuZG9tYWluKFswLCBkMy5tYXgoZGF0YSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gK2QubjsgfSldKQogICAgLnJhbmdlKFsgaGVpZ2h0LCAwIF0pOwogIHN2Zy5hcHBlbmQoImciKQogICAgLmNhbGwoZDMuYXhpc0xlZnQoeSkudGlja3MoNSkpOwoKICAvLyBjb2xvciBwYWxldHRlCiAgdmFyIGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKCkKICAgIC5kb21haW4oYWxsS2V5cykKICAgIC5yYW5nZShbJyNlNDFhMWMnLCcjMzc3ZWI4JywnIzRkYWY0YScsJyM5ODRlYTMnLCcjZmY3ZjAwJywnI2ZmZmYzMycsJyNhNjU2MjgnLCcjZjc4MWJmJywnIzk5OTk5OSddKQoKICAvLyBEcmF3IHRoZSBsaW5lCiAgc3ZnCiAgICAuYXBwZW5kKCJwYXRoIikKICAgICAgLmF0dHIoImZpbGwiLCAibm9uZSIpCiAgICAgIC5hdHRyKCJzdHJva2UiLCBmdW5jdGlvbihkKXsgcmV0dXJuIGNvbG9yKGQua2V5KSB9KQogICAgICAuYXR0cigic3Ryb2tlLXdpZHRoIiwgMS45KQogICAgICAuYXR0cigiZCIsIGZ1bmN0aW9uKGQpewogICAgICAgIHJldHVybiBkMy5saW5lKCkKICAgICAgICAgIC54KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHgoZC55ZWFyKTsgfSkKICAgICAgICAgIC55KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHkoK2Qubik7IH0pCiAgICAgICAgICAoZC52YWx1ZXMpCiAgICAgIH0pCgogIC8vIEFkZCB0aXRsZXMKICBzdmcKICAgIC5hcHBlbmQoInRleHQiKQogICAgLmF0dHIoInRleHQtYW5jaG9yIiwgInN0YXJ0IikKICAgIC5hdHRyKCJ5IiwgLTUpCiAgICAuYXR0cigieCIsIDApCiAgICAudGV4dChmdW5jdGlvbihkKXsgcmV0dXJuKGQua2V5KX0pCiAgICAuc3R5bGUoImZpbGwiLCBmdW5jdGlvbihkKXsgcmV0dXJuIGNvbG9yKGQua2V5KSB9KQoKfSkK"},{"version":3,"sources":["MeterViotas.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"MeterViotas.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n    </div>\n</template>\n\n<script>\n\nimport * as d3 from 'd3';\nexport default {\n\n}\n\n// set the dimensions and margins of the graph\nvar margin = {top: 30, right: 0, bottom: 30, left: 50},\n    width = 210 - margin.left - margin.right,\n    height = 210 - margin.top - margin.bottom;\n\n//Read the data\nd3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered.csv\", function(data) {\n\n  // group the data: I want to draw one line per group\n  var sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n    .key(function(d) { return d.name;})\n    .entries(data);\n\n  // What is the list of groups?\n  var allKeys = sumstat.map(function(d){return d.key})\n\n  // Add an svg element for each group. The will be one beside each other and will go on the next row when no more room available\n  var svg = d3.select(\"div\")\n    .selectAll(\"uniqueChart\")\n    .data(sumstat)\n    .enter()\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Add X axis --> it is a date format\n  var x = d3.scaleLinear()\n    .domain(d3.extent(data, function(d) { return d.year; }))\n    .range([ 0, width ]);\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(3));\n\n  //Add Y axis\n  var y = d3.scaleLinear()\n    .domain([0, d3.max(data, function(d) { return +d.n; })])\n    .range([ height, 0 ]);\n  svg.append(\"g\")\n    .call(d3.axisLeft(y).ticks(5));\n\n  // color palette\n  var color = d3.scaleOrdinal()\n    .domain(allKeys)\n    .range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])\n\n  // Draw the line\n  svg\n    .append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", function(d){ return color(d.key) })\n      .attr(\"stroke-width\", 1.9)\n      .attr(\"d\", function(d){\n        return d3.line()\n          .x(function(d) { return x(d.year); })\n          .y(function(d) { return y(+d.n); })\n          (d.values)\n      })\n\n  // Add titles\n  svg\n    .append(\"text\")\n    .attr(\"text-anchor\", \"start\")\n    .attr(\"y\", -5)\n    .attr(\"x\", 0)\n    .text(function(d){ return(d.key)})\n    .style(\"fill\", function(d){ return color(d.key) })\n\n})\n</script>\n"]}]}